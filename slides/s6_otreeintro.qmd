---
title: "Python + oTree Crash Course"
subtitle: Session II - Python Basics 2
author: "Ali Seyhun Saral (Institute for Advanced Study in Toulouse)"
institute: "IMPRS Be Smart Summer School"
date: "7 August 2023"
footer: ""
execute:
  echo: true

format:
  revealjs:
    #theme: white
    incremental: false
    smaller: true
    slide-number: true
    show-slide-number: print

bibliography: bibliography.bib
css: styles.css
title-slide-attributes:
  data-background-image: images/fishmarket.jpg
  data-background-size: cover
---

## About oTree
* oTree is a platform/software to run lab/online experiments.
* Participants interact with each other using their browsers
* oTree runs on a web server:
  * It runs on your computer for development
  * It may run on a physical server
  * It may run on a cloud server

. . . 

![](2023-08-04-14-20-18.png){width=50%}

## About oTree (2)
* It essentially works as a "web-page"
* oTree handles necessary components like database, pages, urls, ...
* Defines a specialized data structure for our needs
  * Players
  * Groups
  * Session

. . .

![](2023-08-04-14-24-07.png){width=50%}

## Ways to build your experiment

- Using a text editor

- oTree studio (https://www.otreehub.com/)

## What do you need?
* A Python 3 installation
* A text editor/IDE to develop Python
  * PyCharm
  * Visual Studio Code
  * RStudio
  * Notepad++
  * Even notepad
* A command-line interface

## Components of an oTree Experiment

![](images/otree_components.png)


## Virtual Environments in Python
* A virtual environment is essentially a directory that contains:
  * Python installation
  * A number of additional packages

* They provide *isolated* python development enviromens with different packages and dependencies.

:::: {.columns}

::: {.column width="50%"}
![](images/venv1.png)
:::

::: {.column width="50%"}
![](images/venv2.png)
:::

::::


## oTree Development Installation Structure
(my suggestion)
```
ot
├── oTree
│   ├── app1
│   ├── app2
│   ├── ...
└── venv
```

* `ot`: A container folder
* `oTree`: oTree software (project folder)
* `venv`: Virtual Environment


# oTree Installation
1. Create the parent folder `ot`
  ```{.bash}
  mkdir ot
  ```

2. Go to the folder
  ```{.bash}
  cd ot
  ```

3. Create the virtual enviroment
  ```{.bash}
  python3 -m venv venv
  ```

4. Activate the virtual environment
  ```{bash}
  # MacOS or Linux
  source venv/bin/activate
  ```
  ```{bash}
  # Windows
  venv\Scripts\activate
  ```


# oTree Installation

::::{.columns}
:::{.column}
5. Install `otree` Package
  ```{.bash}
  pip install otree
  ```

6. Create an oTree project
  ```{.bash}
  otree startproject oTree
  ```

7. Go to oTree folder
  ```{.bash}
  cd oTree
  ```

8. Check if oTree is can be startd
  ```{.bash}
  otree devserver
  ```

:::

:::{.column}
```
~/ot/oTree> otree devserver
Open your browser to http://localhost:8000/
To quit the server, press Control+C.
```
:::
::::



## Command Line Mini Cheatsheet

|Command                  |  Windows               | MacOS/Linux               |
|-------------------------|------------------------|---------------------------|
| print current location  | `pwd`                  |  `cd`                     |
| list files here         | `dir`                  |  `ls`                     |
| go to directory         | `cd NAME`              | `cd NAME`                 |
| create directory        | `mkdir NAME`           | `mkdir NAME`              |
| delete file             | `del filename`         | `rm filename`             |
| activate virtual env.   | `PATH\Scripts\activate`| `source PATH\bin\activate`|
| deactivate virtual env. | `deactivate`           | `deactivate`              |
| run oTree server (dev.) | `otree devserver`      | `otree devserver`         |
| create app              | `otree startapp APPNAME`| `otree startapp APPNAME` |



## oTree Interface

![](images/otree_interface.png)

* Demo: A quick way to test experiments
* Sessions: To create and manage sessions
* Rooms: A tool to run experiments on specific links with specific participants
* Data: To download data (all together)
* Server check: Shows a summery of server configuration


## oTree File Structure
::::{.columns}
:::{.column}
![](images/otree_filestructure.png)
:::
:::{.column}
* `settings.py`: oTree settings file
* `my_survey` folder: the app in our oTree project. We apps on our own.
  * `__init__.py`: Backend components (pages and models)
  * `*.html`: Frontend components (templates)

:::
::::

## What is an app?
* App is the basic unit of an experiment.
* Each experiment should consist at least one app.
* Each app has its own: 
  * Pages
  * Fields/data structure for participant
  * Other components like images, csv files etc.
  * ...

![](images/single_app.png)

## What is an app?
* Experiments may contain more than one app

![](images/multiple_apps.png)

## Create and register an app
* Make sure you have your virtual environment activated

* Make sure you are in the `oTree` (project) folder

* Create the app

  ```{.bash}
  otree startapp APPNAME
  ```


* In our case we will use the name `my_survey`:
  ```{.bash}
  otree startapp my_survey
  ```

## Register the app in the project
* Go to `settings.py`

* Modify `SESSION_CONFIGS` as below

  ```{.python}
  SESSION_CONFIGS = [
    dict(
      name='my_survey',
      app_sequence=['my_survey'],
      num_demo_participants=10,
    ),
  ]
  ```

## How `__init__.py` looks like?

::::{.columns}
:::{.column}

```{.python}
from otree.api import *


doc = """
Your app description
"""

class Constants(BaseConstants):
    name_in_url = 'newapp'
    players_per_group = None
    num_rounds = 1


class Subsession(BaseSubsession):
    pass


class Group(BaseGroup):
    pass


class Player(BasePlayer):
    pass
```
:::
:::{.column}


```{.python}
# PAGES
class MyPage(Page):
    pass


class ResultsWaitPage(WaitPage):
    pass


class Results(Page):
    pass


page_sequence = [MyPage,
                 ResultsWaitPage,
                Results]
```
:::
::::


## Anatomy of an init file

::::{.columns}
:::{.column}

```{.python}
from otree.api import *


doc = """
Your app description
"""

class Constants(BaseConstants):
    name_in_url = 'newapp'
    players_per_group = None
    num_rounds = 1


class Subsession(BaseSubsession):
    pass


class Group(BaseGroup):
    pass


class Player(BasePlayer):
    pass
```
:::
:::{.column}


```{.python}
# PAGES
class MyPage(Page):
    pass


class ResultsWaitPage(WaitPage):
    pass


class Results(Page):
    pass


page_sequence = [MyPage,
                 ResultsWaitPage,
                Results]
```
:::
::::


## oTree Structure
![](images/otree_structure.png)


# Individual Decisions

